{"remainingRequest":"/home/netsuretsu/Desktop/ecp/node_modules/babel-loader/lib/index.js!/home/netsuretsu/Desktop/ecp/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/home/netsuretsu/Desktop/ecp/node_modules/quasar/src/components/input/use-mask.js","dependencies":[{"path":"/home/netsuretsu/Desktop/ecp/node_modules/quasar/src/components/input/use-mask.js","mtime":1645750057943},{"path":"/home/netsuretsu/Desktop/ecp/babel.config.js","mtime":1646391901612},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/cache-loader/dist/cjs.js","mtime":1645750062537},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/babel-loader/lib/index.js","mtime":1645750062530},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1645750100417}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/netsuretsu/Desktop/ecp/node_modules/quasar/src/components/input/use-mask.js"],"names":["ref","watch","nextTick","shouldIgnoreKey","NAMED_MASKS","date","datetime","time","fulltime","phone","card","TOKENS","pattern","negate","S","N","A","transform","v","toLocaleUpperCase","a","toLocaleLowerCase","X","x","KEYS","Object","keys","forEach","key","regex","RegExp","tokenRegexMask","join","escRegex","MARKER","String","fromCharCode","useMaskProps","mask","reverseFillMask","Boolean","fillMask","unmaskedValue","props","emit","emitValue","inputRef","maskMarked","maskReplaced","computedMask","computedUnmask","hasMask","innerValue","getInitialMaskedValue","getIsTypeText","autogrow","includes","type","updateMaskInternals","updateMaskValue","value","val","unmaskValue","modelValue","masked","maskValue","fillWithMask","getPaddedMaskMarked","size","length","slice","pad","localMaskMarked","padPos","indexOf","i","localComputedMask","fillChar","fillCharEscaped","replace","unmask","extract","firstMatch","unmaskChar","negateChar","_","char1","esc","token","char2","c","push","unmaskMatcher","extractLast","extractMatcher","map","re","index","unmaskMatch","exec","extractMatch","extractMatcherLength","str","m","shift","split","rawVal","updateMaskInternalsFlag","inputType","inp","end","selectionEnd","endReverse","unmasked","preMasked","changed","document","activeElement","cursor","setSelectionRange","moveCursor","right","Math","max","min","rightReverse","moveCursorForPaste","start","left","selection","noMarkBefore","limit","leftReverse","onMaskedKeydown","e","selectionStart","keyCode","fn","preventDefault","shiftKey","maskValueReverse","valIndex","output","maskIndex","valChar","maskDef","test","firstTokenIndex"],"mappings":"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","sourcesContent":["import { ref, watch, nextTick } from 'vue'\n\nimport { shouldIgnoreKey } from '../../utils/private/key-composition.js'\n\n// leave NAMED_MASKS at top of file (code referenced from docs)\nconst NAMED_MASKS = {\n  date: '####/##/##',\n  datetime: '####/##/## ##:##',\n  time: '##:##',\n  fulltime: '##:##:##',\n  phone: '(###) ### - ####',\n  card: '#### #### #### ####'\n}\n\nconst TOKENS = {\n  '#': { pattern: '[\\\\d]', negate: '[^\\\\d]' },\n\n  S: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]' },\n  N: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]' },\n\n  A: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  a: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleLowerCase() },\n\n  X: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  x: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleLowerCase() }\n}\n\nconst KEYS = Object.keys(TOKENS)\nKEYS.forEach(key => {\n  TOKENS[ key ].regex = new RegExp(TOKENS[ key ].pattern)\n})\n\nconst\n  tokenRegexMask = new RegExp('\\\\\\\\([^.*+?^${}()|([\\\\]])|([.*+?^${}()|[\\\\]])|([' + KEYS.join('') + '])|(.)', 'g'),\n  escRegex = /[.*+?^${}()|[\\]\\\\]/g\n\nconst MARKER = String.fromCharCode(1)\n\nexport const useMaskProps = {\n  mask: String,\n  reverseFillMask: Boolean,\n  fillMask: [ Boolean, String ],\n  unmaskedValue: Boolean\n}\n\nexport default function (props, emit, emitValue, inputRef) {\n  let maskMarked, maskReplaced, computedMask, computedUnmask\n\n  const hasMask = ref(null)\n  const innerValue = ref(getInitialMaskedValue())\n\n  function getIsTypeText () {\n    return props.autogrow === true\n      || [ 'textarea', 'text', 'search', 'url', 'tel', 'password' ].includes(props.type)\n  }\n\n  watch(() => props.type + props.autogrow, updateMaskInternals)\n\n  watch(() => props.mask, v => {\n    if (v !== void 0) {\n      updateMaskValue(innerValue.value, true)\n    }\n    else {\n      const val = unmaskValue(innerValue.value)\n      updateMaskInternals()\n      props.modelValue !== val && emit('update:modelValue', val)\n    }\n  })\n\n  watch(() => props.fillMask + props.reverseFillMask, () => {\n    hasMask.value === true && updateMaskValue(innerValue.value, true)\n  })\n\n  watch(() => props.unmaskedValue, () => {\n    hasMask.value === true && updateMaskValue(innerValue.value)\n  })\n\n  function getInitialMaskedValue () {\n    updateMaskInternals()\n\n    if (hasMask.value === true) {\n      const masked = maskValue(unmaskValue(props.modelValue))\n\n      return props.fillMask !== false\n        ? fillWithMask(masked)\n        : masked\n    }\n\n    return props.modelValue\n  }\n\n  function getPaddedMaskMarked (size) {\n    if (size < maskMarked.length) {\n      return maskMarked.slice(-size)\n    }\n\n    let pad = '', localMaskMarked = maskMarked\n    const padPos = localMaskMarked.indexOf(MARKER)\n\n    if (padPos > -1) {\n      for (let i = size - localMaskMarked.length; i > 0; i--) {\n        pad += MARKER\n      }\n\n      localMaskMarked = localMaskMarked.slice(0, padPos) + pad + localMaskMarked.slice(padPos)\n    }\n\n    return localMaskMarked\n  }\n\n  function updateMaskInternals () {\n    hasMask.value = props.mask !== void 0\n      && props.mask.length > 0\n      && getIsTypeText()\n\n    if (hasMask.value === false) {\n      computedUnmask = void 0\n      maskMarked = ''\n      maskReplaced = ''\n      return\n    }\n\n    const\n      localComputedMask = NAMED_MASKS[ props.mask ] === void 0\n        ? props.mask\n        : NAMED_MASKS[ props.mask ],\n      fillChar = typeof props.fillMask === 'string' && props.fillMask.length > 0\n        ? props.fillMask.slice(0, 1)\n        : '_',\n      fillCharEscaped = fillChar.replace(escRegex, '\\\\$&'),\n      unmask = [],\n      extract = [],\n      mask = []\n\n    let\n      firstMatch = props.reverseFillMask === true,\n      unmaskChar = '',\n      negateChar = ''\n\n    localComputedMask.replace(tokenRegexMask, (_, char1, esc, token, char2) => {\n      if (token !== void 0) {\n        const c = TOKENS[ token ]\n        mask.push(c)\n        negateChar = c.negate\n        if (firstMatch === true) {\n          extract.push('(?:' + negateChar + '+)?(' + c.pattern + '+)?(?:' + negateChar + '+)?(' + c.pattern + '+)?')\n          firstMatch = false\n        }\n        extract.push('(?:' + negateChar + '+)?(' + c.pattern + ')?')\n      }\n      else if (esc !== void 0) {\n        unmaskChar = '\\\\' + (esc === '\\\\' ? '' : esc)\n        mask.push(esc)\n        unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n      }\n      else {\n        const c = char1 !== void 0 ? char1 : char2\n        unmaskChar = c === '\\\\' ? '\\\\\\\\\\\\\\\\' : c.replace(escRegex, '\\\\\\\\$&')\n        mask.push(c)\n        unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n      }\n    })\n\n    const\n      unmaskMatcher = new RegExp(\n        '^'\n        + unmask.join('')\n        + '(' + (unmaskChar === '' ? '.' : '[^' + unmaskChar + ']') + '+)?'\n        + '$'\n      ),\n      extractLast = extract.length - 1,\n      extractMatcher = extract.map((re, index) => {\n        if (index === 0 && props.reverseFillMask === true) {\n          return new RegExp('^' + fillCharEscaped + '*' + re)\n        }\n        else if (index === extractLast) {\n          return new RegExp(\n            '^' + re\n            + '(' + (negateChar === '' ? '.' : negateChar) + '+)?'\n            + (props.reverseFillMask === true ? '$' : fillCharEscaped + '*')\n          )\n        }\n\n        return new RegExp('^' + re)\n      })\n\n    computedMask = mask\n    computedUnmask = val => {\n      const unmaskMatch = unmaskMatcher.exec(val)\n      if (unmaskMatch !== null) {\n        val = unmaskMatch.slice(1).join('')\n      }\n\n      const\n        extractMatch = [],\n        extractMatcherLength = extractMatcher.length\n\n      for (let i = 0, str = val; i < extractMatcherLength; i++) {\n        const m = extractMatcher[ i ].exec(str)\n\n        if (m === null) {\n          break\n        }\n\n        str = str.slice(m.shift().length)\n        extractMatch.push(...m)\n      }\n      if (extractMatch.length > 0) {\n        return extractMatch.join('')\n      }\n\n      return val\n    }\n    maskMarked = mask.map(v => (typeof v === 'string' ? v : MARKER)).join('')\n    maskReplaced = maskMarked.split(MARKER).join(fillChar)\n  }\n\n  function updateMaskValue (rawVal, updateMaskInternalsFlag, inputType) {\n    const\n      inp = inputRef.value,\n      end = inp.selectionEnd,\n      endReverse = inp.value.length - end,\n      unmasked = unmaskValue(rawVal)\n\n    // Update here so unmask uses the original fillChar\n    updateMaskInternalsFlag === true && updateMaskInternals()\n\n    const\n      preMasked = maskValue(unmasked),\n      masked = props.fillMask !== false\n        ? fillWithMask(preMasked)\n        : preMasked,\n      changed = innerValue.value !== masked\n\n    // We want to avoid \"flickering\" so we set value immediately\n    inp.value !== masked && (inp.value = masked)\n\n    changed === true && (innerValue.value = masked)\n\n    document.activeElement === inp && nextTick(() => {\n      if (masked === maskReplaced) {\n        const cursor = props.reverseFillMask === true ? maskReplaced.length : 0\n        inp.setSelectionRange(cursor, cursor, 'forward')\n\n        return\n      }\n\n      if (inputType === 'insertFromPaste' && props.reverseFillMask !== true) {\n        const cursor = end - 1\n        moveCursor.right(inp, cursor, cursor)\n\n        return\n      }\n\n      if ([ 'deleteContentBackward', 'deleteContentForward' ].indexOf(inputType) > -1) {\n        const cursor = props.reverseFillMask === true\n          ? (\n              end === 0\n                ? (masked.length > preMasked.length ? 1 : 0)\n                : Math.max(0, masked.length - (masked === maskReplaced ? 0 : Math.min(preMasked.length, endReverse) + 1)) + 1\n            )\n          : end\n\n        inp.setSelectionRange(cursor, cursor, 'forward')\n        return\n      }\n\n      if (props.reverseFillMask === true) {\n        if (changed === true) {\n          const cursor = Math.max(0, masked.length - (masked === maskReplaced ? 0 : Math.min(preMasked.length, endReverse + 1)))\n\n          if (cursor === 1 && end === 1) {\n            inp.setSelectionRange(cursor, cursor, 'forward')\n          }\n          else {\n            moveCursor.rightReverse(inp, cursor, cursor)\n          }\n        }\n        else {\n          const cursor = masked.length - endReverse\n          inp.setSelectionRange(cursor, cursor, 'backward')\n        }\n      }\n      else {\n        if (changed === true) {\n          const cursor = Math.max(0, maskMarked.indexOf(MARKER), Math.min(preMasked.length, end) - 1)\n          moveCursor.right(inp, cursor, cursor)\n        }\n        else {\n          const cursor = end - 1\n          moveCursor.right(inp, cursor, cursor)\n        }\n      }\n    })\n\n    const val = props.unmaskedValue === true\n      ? unmaskValue(masked)\n      : masked\n\n    String(props.modelValue) !== val && emitValue(val, true)\n  }\n\n  function moveCursorForPaste (inp, start, end) {\n    const preMasked = maskValue(unmaskValue(inp.value))\n\n    start = Math.max(0, maskMarked.indexOf(MARKER), Math.min(preMasked.length, start))\n\n    inp.setSelectionRange(start, end, 'forward')\n  }\n\n  const moveCursor = {\n    left (inp, start, end, selection) {\n      const noMarkBefore = maskMarked.slice(start - 1).indexOf(MARKER) === -1\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (maskMarked[ i ] === MARKER) {\n          start = i\n          noMarkBefore === true && start++\n          break\n        }\n      }\n\n      if (\n        i < 0\n        && maskMarked[ start ] !== void 0\n        && maskMarked[ start ] !== MARKER\n      ) {\n        return moveCursor.right(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    right (inp, start, end, selection) {\n      const limit = inp.value.length\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (maskMarked[ i ] === MARKER) {\n          end = i\n          break\n        }\n        else if (maskMarked[ i - 1 ] === MARKER) {\n          end = i\n        }\n      }\n\n      if (\n        i > limit\n        && maskMarked[ end - 1 ] !== void 0\n        && maskMarked[ end - 1 ] !== MARKER\n      ) {\n        return moveCursor.left(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection ? start : end, end, 'forward')\n    },\n\n    leftReverse (inp, start, end, selection) {\n      const\n        localMaskMarked = getPaddedMaskMarked(inp.value.length)\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (localMaskMarked[ i - 1 ] === MARKER) {\n          start = i\n          break\n        }\n        else if (localMaskMarked[ i ] === MARKER) {\n          start = i\n          if (i === 0) {\n            break\n          }\n        }\n      }\n\n      if (\n        i < 0\n        && localMaskMarked[ start ] !== void 0\n        && localMaskMarked[ start ] !== MARKER\n      ) {\n        return moveCursor.rightReverse(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    rightReverse (inp, start, end, selection) {\n      const\n        limit = inp.value.length,\n        localMaskMarked = getPaddedMaskMarked(limit),\n        noMarkBefore = localMaskMarked.slice(0, end + 1).indexOf(MARKER) === -1\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (localMaskMarked[ i - 1 ] === MARKER) {\n          end = i\n          end > 0 && noMarkBefore === true && end--\n          break\n        }\n      }\n\n      if (\n        i > limit\n        && localMaskMarked[ end - 1 ] !== void 0\n        && localMaskMarked[ end - 1 ] !== MARKER\n      ) {\n        return moveCursor.leftReverse(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection === true ? start : end, end, 'forward')\n    }\n  }\n\n  function onMaskedKeydown (e) {\n    if (shouldIgnoreKey(e) === true) {\n      return\n    }\n\n    const\n      inp = inputRef.value,\n      start = inp.selectionStart,\n      end = inp.selectionEnd\n\n    if (e.keyCode === 37 || e.keyCode === 39) { // Left / Right\n      const fn = moveCursor[ (e.keyCode === 39 ? 'right' : 'left') + (props.reverseFillMask === true ? 'Reverse' : '') ]\n\n      e.preventDefault()\n      fn(inp, start, end, e.shiftKey)\n    }\n    else if (\n      e.keyCode === 8 // Backspace\n      && props.reverseFillMask !== true\n      && start === end\n    ) {\n      moveCursor.left(inp, start, end, true)\n    }\n    else if (\n      e.keyCode === 46 // Delete\n      && props.reverseFillMask === true\n      && start === end\n    ) {\n      moveCursor.rightReverse(inp, start, end, true)\n    }\n  }\n\n  function maskValue (val) {\n    if (val === void 0 || val === null || val === '') { return '' }\n\n    if (props.reverseFillMask === true) {\n      return maskValueReverse(val)\n    }\n\n    const mask = computedMask\n\n    let valIndex = 0, output = ''\n\n    for (let maskIndex = 0; maskIndex < mask.length; maskIndex++) {\n      const\n        valChar = val[ valIndex ],\n        maskDef = mask[ maskIndex ]\n\n      if (typeof maskDef === 'string') {\n        output += maskDef\n        valChar === maskDef && valIndex++\n      }\n      else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n        output += maskDef.transform !== void 0\n          ? maskDef.transform(valChar)\n          : valChar\n        valIndex++\n      }\n      else {\n        return output\n      }\n    }\n\n    return output\n  }\n\n  function maskValueReverse (val) {\n    const\n      mask = computedMask,\n      firstTokenIndex = maskMarked.indexOf(MARKER)\n\n    let valIndex = val.length - 1, output = ''\n\n    for (let maskIndex = mask.length - 1; maskIndex >= 0 && valIndex > -1; maskIndex--) {\n      const maskDef = mask[ maskIndex ]\n\n      let valChar = val[ valIndex ]\n\n      if (typeof maskDef === 'string') {\n        output = maskDef + output\n        valChar === maskDef && valIndex--\n      }\n      else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n        do {\n          output = (maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar) + output\n          valIndex--\n          valChar = val[ valIndex ]\n        // eslint-disable-next-line no-unmodified-loop-condition\n        } while (firstTokenIndex === maskIndex && valChar !== void 0 && maskDef.regex.test(valChar))\n      }\n      else {\n        return output\n      }\n    }\n\n    return output\n  }\n\n  function unmaskValue (val) {\n    return typeof val !== 'string' || computedUnmask === void 0\n      ? (typeof val === 'number' ? computedUnmask('' + val) : val)\n      : computedUnmask(val)\n  }\n\n  function fillWithMask (val) {\n    if (maskReplaced.length - val.length <= 0) {\n      return val\n    }\n\n    return props.reverseFillMask === true && val.length > 0\n      ? maskReplaced.slice(0, -val.length) + val\n      : val + maskReplaced.slice(val.length)\n  }\n\n  return {\n    innerValue,\n    hasMask,\n    moveCursorForPaste,\n    updateMaskValue,\n    onMaskedKeydown\n  }\n}\n"]}]}