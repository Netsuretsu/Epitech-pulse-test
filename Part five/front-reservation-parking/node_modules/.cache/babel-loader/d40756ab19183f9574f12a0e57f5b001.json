{"remainingRequest":"/home/netsuretsu/Desktop/ecp/node_modules/babel-loader/lib/index.js!/home/netsuretsu/Desktop/ecp/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/home/netsuretsu/Desktop/ecp/node_modules/eslint-loader/index.js??ref--14-0!/home/netsuretsu/Desktop/ecp/src/api/CRUDuser.js","dependencies":[{"path":"/home/netsuretsu/Desktop/ecp/src/api/CRUDuser.js","mtime":1646391901688},{"path":"/home/netsuretsu/Desktop/ecp/babel.config.js","mtime":1646391901612},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/cache-loader/dist/cjs.js","mtime":1645750062537},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/babel-loader/lib/index.js","mtime":1645750062530},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1645750100417},{"path":"/home/netsuretsu/Desktop/ecp/node_modules/eslint-loader/index.js","mtime":1645750077678}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL25ldHN1cmV0c3UvRGVza3RvcC9lY3Avbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBhdXRoIGZyb20gIi4vYXV0aCI7CmltcG9ydCB7IGFwaSB9IGZyb20gIi4vYmFzZVVSTCI7CmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGU6IGZ1bmN0aW9uIGNyZWF0ZShkYXRhKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgdG9rZW4sIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBhdXRoLmdldEFkbWluVG9rZW4oKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2codG9rZW4pOwogICAgICAgICAgICAgIGFwaS5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsiQXV0aG9yaXphdGlvbiJdID0gIkJlYXJlciAiLmNvbmNhdCh0b2tlbik7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5wb3N0KCJ1c2VycyIsIGRhdGEpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcy5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICByZWFkOiBmdW5jdGlvbiByZWFkKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciB0b2tlbiwgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXV0aC5nZXRBZG1pblRva2VuKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgdG9rZW4gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBhcGkuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bIkF1dGhvcml6YXRpb24iXSA9ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldCgidXNlcnMiKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcy5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoaWQsIGRhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgdG9rZW4sIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF1dGguZ2V0VXNlclRva2VuKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgdG9rZW4gPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBhcGkuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bIkF1dGhvcml6YXRpb24iXSA9ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gYXBpLnB1dCgidXNlcnMvIi5jb25jYXQoaWQpLCBkYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlcy5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgZGVsZXRlOiBmdW5jdGlvbiBfZGVsZXRlKGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIHRva2VuLCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBhdXRoLmdldFVzZXJUb2tlbigpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHRva2VuID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgYXBpLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyJBdXRob3JpemF0aW9uIl0gPSAiQmVhcmVyICIuY29uY2F0KHRva2VuKTsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5kZWxldGUoInVzZXJzLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXMuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/home/netsuretsu/Desktop/ecp/src/api/CRUDuser.js"],"names":["auth","api","create","data","getAdminToken","token","console","log","defaults","headers","common","post","res","read","get","update","id","getUserToken","put","delete"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,eAAe;AACPC,EAAAA,MADO,kBACAC,IADA,EACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGH,IAAI,CAACI,aAAL,EADH;;AAAA;AACXC,cAAAA,KADW;AAEjBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,cAAAA,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,qBAAyDL,KAAzD;AAHiB;AAAA,qBAICJ,GAAG,CAACU,IAAJ,CAAS,OAAT,EAAkBR,IAAlB,CAJD;;AAAA;AAIXS,cAAAA,GAJW;AAKjBN,cAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACT,IAAhB;AALiB,+CAMVS,GAAG,CAACT,IANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlB,GARY;AAUPU,EAAAA,IAVO,kBAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSb,IAAI,CAACI,aAAL,EADT;;AAAA;AACLC,cAAAA,KADK;AAEXJ,cAAAA,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,qBAAyDL,KAAzD;AAFW;AAAA,qBAGOJ,GAAG,CAACa,GAAJ,CAAQ,OAAR,CAHP;;AAAA;AAGLF,cAAAA,GAHK;AAIXN,cAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACT,IAAhB;AAJW,gDAKJS,GAAG,CAACT,IALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMZ,GAhBY;AAkBPY,EAAAA,MAlBO,kBAkBAC,EAlBA,EAkBIb,IAlBJ,EAkBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDH,IAAI,CAACiB,YAAL,EADC;;AAAA;AACfZ,cAAAA,KADe;AAErBJ,cAAAA,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,qBAAyDL,KAAzD;AAFqB;AAAA,qBAGHJ,GAAG,CAACiB,GAAJ,iBAAiBF,EAAjB,GAAuBb,IAAvB,CAHG;;AAAA;AAGfS,cAAAA,GAHe;AAIrBN,cAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACT,IAAhB;AAJqB,gDAKdS,GAAG,CAACT,IALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtB,GAxBY;AAyBPgB,EAAAA,MAzBO,mBAyBAH,EAzBA,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKhB,IAAI,CAACiB,YAAL,EADL;;AAAA;AACTZ,cAAAA,KADS;AAEfJ,cAAAA,GAAG,CAACO,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,qBAAyDL,KAAzD;AAFe;AAAA,qBAGGJ,GAAG,CAACkB,MAAJ,iBAAoBH,EAApB,EAHH;;AAAA;AAGTJ,cAAAA,GAHS;AAIfN,cAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACT,IAAhB;AAJe,gDAKRS,GAAG,CAACT,IALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhB;AA/BY,CAAf","sourcesContent":["import auth from \"./auth\";\nimport { api } from \"./baseURL\";\n\nexport default {\n  async create(data) {\n    const token = await auth.getAdminToken();\n    console.log(token);\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    const res = await api.post(\"users\", data);\n    console.log(res.data);\n    return res.data;\n  },\n\n  async read() {\n    const token = await auth.getAdminToken();\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    const res = await api.get(\"users\");\n    console.log(res.data);\n    return res.data;\n  },\n\n  async update(id, data) {\n    const token = await auth.getUserToken();\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    const res = await api.put(`users/${id}`, data);\n    console.log(res.data);\n    return res.data;\n  },\n  async delete(id) {\n    const token = await auth.getUserToken();\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    const res = await api.delete(`users/${id}`);\n    console.log(res.data);\n    return res.data;\n  },\n};\n"]}]}