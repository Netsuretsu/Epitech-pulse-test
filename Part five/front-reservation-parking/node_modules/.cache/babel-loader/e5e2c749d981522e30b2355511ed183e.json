{"remainingRequest":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/babel-loader/lib/index.js!/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/quasar/src/utils/export-file.js","dependencies":[{"path":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/quasar/src/utils/export-file.js","mtime":1645750057943},{"path":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/babel.config.js","mtime":1646391901612},{"path":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/cache-loader/dist/cjs.js","mtime":1645750062537},{"path":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/babel-loader/lib/index.js","mtime":1645750062530},{"path":"/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1645750100417}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwtc2VhcmNoLXBhcmFtcy5qcyI7CgpmdW5jdGlvbiBjbGVhbihsaW5rKSB7CiAgLy8gYWxsb3cgdGltZSBmb3IgaU9TCiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTChsaW5rLmhyZWYpOwogIH0sIDEwMDAwKTsKICBsaW5rLnJlbW92ZSgpOwp9Ci8qKgogKiBGb3JjZXMgYnJvd3NlciB0byBkb3dubG9hZCBmaWxlIHdpdGggc3BlY2lmaWVkIGNvbnRlbnQKICoKICogQHBhcmFtIHsqfSBmaWxlTmFtZSAtIFN0cmluZwogKiBAcGFyYW0geyp9IHJhd0RhdGEgLSBTdHJpbmcgfCBBcnJheUJ1ZmZlciB8IEFycmF5QnVmZmVyVmlldyB8IEJsb2IKICogQHBhcmFtIHsqfSBvcHRzIC0gU3RyaW5nIChtaW1lVHlwZSkgb3IgT2JqZWN0CiAqICAgICAgICAgICAgICAgICAgIE9iamVjdCBmb3JtOiB7IG1pbWVUeXBlPzogU3RyaW5nLCBieXRlT3JkZXJNYXJrPzogU3RyaW5nIHwgVWludDhBcnJheSwgZW5jb2Rpbmc/OiBTdHJpbmcgfQogKiBAcmV0dXJucyBCb29sZWFuIHwgRXJyb3IKICoKICogbWltZVR5cGUgICAgICAgLSBFeGFtcGxlczogJ2FwcGxpY2F0aW9uL29jdGVjdC1zdHJlYW0nIChkZWZhdWx0KSwgJ3RleHQvcGxhaW4nLCAnYXBwbGljYXRpb24vanNvbicsCiAqICAgICAgICAgICAgICAgICAgJ3RleHQvcGxhaW47Y2hhcnNldD1VVEYtOCcsICd2aWRlby9tcDQnLCAnaW1hZ2UvcG5nJywgJ2FwcGxpY2F0aW9uL3BkZicKICogICAgICAgICAgICAgICAgICBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0Jhc2ljc19vZl9IVFRQL01JTUVfdHlwZXMKICoKICogYnl0ZU9yZGVyTWFyayAgLSAoQk9NKSBFeGFtcGxlOiAnXHVGRUZGJwogKiAgICAgICAgICAgICAgICAgIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0J5dGVfb3JkZXJfbWFyawogKgogKiBlbmNvZGluZyAgICAgICAtIFBlcmZvcm1zIGEgVGV4dEVuY29kZXIuZW5jb2RlKCkgb3ZlciB0aGUgcmF3RGF0YTsKICogICAgICAgICAgICAgICAgICBFeGFtcGxlOiAnd2luZG93cy0xMjUyJyAoQU5TSSwgYSBzdWJzZXQgb2YgSVNPLTg4NTktMSkKICogICAgICAgICAgICAgICAgICBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvVGV4dEVuY29kZXIKICovCgoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGZpbGVOYW1lLCByYXdEYXRhKSB7CiAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9OwoKICB2YXIgX3JlZiA9IHR5cGVvZiBvcHRzID09PSAnc3RyaW5nJyA/IHsKICAgIG1pbWVUeXBlOiBvcHRzCiAgfSA6IG9wdHMsCiAgICAgIG1pbWVUeXBlID0gX3JlZi5taW1lVHlwZSwKICAgICAgYnl0ZU9yZGVyTWFyayA9IF9yZWYuYnl0ZU9yZGVyTWFyaywKICAgICAgZW5jb2RpbmcgPSBfcmVmLmVuY29kaW5nOwoKICB2YXIgZGF0YSA9IGVuY29kaW5nICE9PSB2b2lkIDAgPyBuZXcgVGV4dEVuY29kZXIoZW5jb2RpbmcpLmVuY29kZShbcmF3RGF0YV0pIDogcmF3RGF0YTsKICB2YXIgYmxvYkRhdGEgPSBieXRlT3JkZXJNYXJrICE9PSB2b2lkIDAgPyBbYnl0ZU9yZGVyTWFyaywgZGF0YV0gOiBbZGF0YV07CiAgdmFyIGJsb2IgPSBuZXcgQmxvYihibG9iRGF0YSwgewogICAgdHlwZTogbWltZVR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScKICB9KTsKICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICBsaW5rLmhyZWYgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsKICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCBmaWxlTmFtZSk7IC8vIENoZWNrIGZvciAiZG93bmxvYWQiIGF0dHJpYnV0ZSBzdXBwb3J0OwogIC8vIElmIG5vdCBzdXBwb3J0ZWQsIG9wZW4gdGhpcyBpbiBuZXcgd2luZG93CgogIGlmICh0eXBlb2YgbGluay5kb3dubG9hZCA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgIGxpbmsuc2V0QXR0cmlidXRlKCd0YXJnZXQnLCAnX2JsYW5rJyk7CiAgfQoKICBsaW5rLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpOwogIGxpbmsuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnOyAvLyBhdm9pZCBzY3JvbGxpbmcgdG8gYm90dG9tCgogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7CgogIHRyeSB7CiAgICBsaW5rLmNsaWNrKCk7CiAgICBjbGVhbihsaW5rKTsKICAgIHJldHVybiB0cnVlOwogIH0gY2F0Y2ggKGVycikgewogICAgY2xlYW4obGluayk7CiAgICByZXR1cm4gZXJyOwogIH0KfQ=="},{"version":3,"sources":["/home/netsuretsu/Rendu/Epitech-pulse-test/Part five/front-reservation-parking/node_modules/quasar/src/utils/export-file.js"],"names":["clean","link","setTimeout","window","URL","revokeObjectURL","href","remove","fileName","rawData","opts","mimeType","byteOrderMark","encoding","data","TextEncoder","encode","blobData","blob","Blob","type","document","createElement","createObjectURL","setAttribute","download","classList","add","style","position","body","appendChild","click","err"],"mappings":";;;;;;;AAAA,SAASA,KAAT,CAAgBC,IAAhB,EAAsB;AACpB;AACAC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAAI,CAACK,IAAhC;AACD,GAFS,EAEP,KAFO,CAAV;AAIAL,EAAAA,IAAI,CAACM,MAAL;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,UAAUC,QAAV,EAAoBC,OAApB,EAAwC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACrD,aAA8C,OAAOA,IAAP,KAAgB,QAAhB,GAC1C;AAAEC,IAAAA,QAAQ,EAAED;AAAZ,GAD0C,GAE1CA,IAFJ;AAAA,MAAQC,QAAR,QAAQA,QAAR;AAAA,MAAkBC,aAAlB,QAAkBA,aAAlB;AAAA,MAAiCC,QAAjC,QAAiCA,QAAjC;;AAIA,MAAMC,IAAI,GAAGD,QAAQ,KAAK,KAAK,CAAlB,GACR,IAAIE,WAAJ,CAAgBF,QAAhB,CAAD,CAA4BG,MAA5B,CAAmC,CAAEP,OAAF,CAAnC,CADS,GAETA,OAFJ;AAIA,MAAMQ,QAAQ,GAAGL,aAAa,KAAK,KAAK,CAAvB,GAA2B,CAAEA,aAAF,EAAiBE,IAAjB,CAA3B,GAAqD,CAAEA,IAAF,CAAtE;AACA,MAAMI,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,EAAmB;AAAEG,IAAAA,IAAI,EAAET,QAAQ,IAAI;AAApB,GAAnB,CAAb;AACA,MAAMV,IAAI,GAAGoB,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AAEArB,EAAAA,IAAI,CAACK,IAAL,GAAYH,MAAM,CAACC,GAAP,CAAWmB,eAAX,CAA2BL,IAA3B,CAAZ;AACAjB,EAAAA,IAAI,CAACuB,YAAL,CAAkB,UAAlB,EAA8BhB,QAA9B,EAdqD,CAgBrD;AACA;;AACA,MAAI,OAAOP,IAAI,CAACwB,QAAZ,KAAyB,WAA7B,EAA0C;AACxCxB,IAAAA,IAAI,CAACuB,YAAL,CAAkB,QAAlB,EAA4B,QAA5B;AACD;;AAEDvB,EAAAA,IAAI,CAACyB,SAAL,CAAeC,GAAf,CAAmB,QAAnB;AACA1B,EAAAA,IAAI,CAAC2B,KAAL,CAAWC,QAAX,GAAsB,OAAtB,CAvBqD,CAuBvB;;AAC9BR,EAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0B9B,IAA1B;;AAEA,MAAI;AACFA,IAAAA,IAAI,CAAC+B,KAAL;AACAhC,IAAAA,KAAK,CAACC,IAAD,CAAL;AACA,WAAO,IAAP;AACD,GAJD,CAKA,OAAOgC,GAAP,EAAY;AACVjC,IAAAA,KAAK,CAACC,IAAD,CAAL;AACA,WAAOgC,GAAP;AACD;AACF","sourcesContent":["function clean (link) {\n  // allow time for iOS\n  setTimeout(() => {\n    window.URL.revokeObjectURL(link.href)\n  }, 10000)\n\n  link.remove()\n}\n\n/**\n * Forces browser to download file with specified content\n *\n * @param {*} fileName - String\n * @param {*} rawData - String | ArrayBuffer | ArrayBufferView | Blob\n * @param {*} opts - String (mimeType) or Object\n *                   Object form: { mimeType?: String, byteOrderMark?: String | Uint8Array, encoding?: String }\n * @returns Boolean | Error\n *\n * mimeType       - Examples: 'application/octect-stream' (default), 'text/plain', 'application/json',\n *                  'text/plain;charset=UTF-8', 'video/mp4', 'image/png', 'application/pdf'\n *                  https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n *\n * byteOrderMark  - (BOM) Example: '\\uFEFF'\n *                  https://en.wikipedia.org/wiki/Byte_order_mark\n *\n * encoding       - Performs a TextEncoder.encode() over the rawData;\n *                  Example: 'windows-1252' (ANSI, a subset of ISO-8859-1)\n *                  https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\n */\nexport default function (fileName, rawData, opts = {}) {\n  const { mimeType, byteOrderMark, encoding } = typeof opts === 'string'\n    ? { mimeType: opts }\n    : opts\n\n  const data = encoding !== void 0\n    ? (new TextEncoder(encoding)).encode([ rawData ])\n    : rawData\n\n  const blobData = byteOrderMark !== void 0 ? [ byteOrderMark, data ] : [ data ]\n  const blob = new Blob(blobData, { type: mimeType || 'application/octet-stream' })\n  const link = document.createElement('a')\n\n  link.href = window.URL.createObjectURL(blob)\n  link.setAttribute('download', fileName)\n\n  // Check for \"download\" attribute support;\n  // If not supported, open this in new window\n  if (typeof link.download === 'undefined') {\n    link.setAttribute('target', '_blank')\n  }\n\n  link.classList.add('hidden')\n  link.style.position = 'fixed' // avoid scrolling to bottom\n  document.body.appendChild(link)\n\n  try {\n    link.click()\n    clean(link)\n    return true\n  }\n  catch (err) {\n    clean(link)\n    return err\n  }\n}\n"]}]}